{"version":3,"file":"encodePolyfill.js","sourceRoot":"","sources":["../../../src/transports/encodePolyfill.ts"],"names":[],"mappings":";;AAAA,oDAAqD;AACrD,sCAAwC;AAEjC,MAAM,iBAAiB,GAAG,GAAS,EAAE;IAC1C,IAAI,CAAC,2BAAc,CAAC,UAAU,EAAE;QAC7B,2BAAc,CAAC,UAEd,GAAG,EAAE,CAAC;KACT;IAED,2BAAc,CAAC,UAAU,CAAC,cAAc,GAAG,sBAAc,CAAC;AAC5D,CAAC,CAAC;AARW,QAAA,iBAAiB,qBAQ5B;AAEK,MAAM,cAAc,GAAG,CAAC,IAAY,EAAc,EAAE;IACzD,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,IAAA,oBAAW,EAAC,IAAI,CAAC,CAAC,CAAC;IAChD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAHW,QAAA,cAAc,kBAGzB","sourcesContent":["import { CAP_GLOBAL_OBJ } from '../utils/webViewUrl';\nimport { utf8ToBytes } from '../vendor';\n\nexport const useEncodePolyfill = (): void => {\n  if (!CAP_GLOBAL_OBJ.__SENTRY__) {\n    (CAP_GLOBAL_OBJ.__SENTRY__ as Partial<\n      (typeof CAP_GLOBAL_OBJ)['__SENTRY__']\n    >) = {};\n  }\n\n  CAP_GLOBAL_OBJ.__SENTRY__.encodePolyfill = encodePolyfill;\n};\n\nexport const encodePolyfill = (text: string): Uint8Array => {\n  const bytes = new Uint8Array(utf8ToBytes(text));\n  return bytes;\n};\n"]}
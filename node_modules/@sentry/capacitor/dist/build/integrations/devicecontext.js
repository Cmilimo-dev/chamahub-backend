Object.defineProperty(exports, "__esModule", { value: true });
exports.deviceContextIntegration = void 0;
const core_1 = require("@sentry/core");
const wrapper_1 = require("../wrapper");
const INTEGRATION_NAME = 'DeviceContext';
const deviceContextIntegration = () => {
    return {
        name: INTEGRATION_NAME,
        processEvent: processEvent,
    };
};
exports.deviceContextIntegration = deviceContextIntegration;
async function processEvent(event) {
    try {
        const contexts = await wrapper_1.NATIVE.fetchNativeDeviceContexts();
        const context = contexts['context'];
        event.contexts = { ...context, ...event.contexts };
        if ('user' in contexts) {
            const user = contexts['user'];
            if (!event.user) {
                event.user = { ...user };
            }
        }
    }
    catch (e) {
        core_1.logger.log(`Failed to get device context from native: ${e}`);
    }
    return event;
}
//# sourceMappingURL=devicecontext.js.map
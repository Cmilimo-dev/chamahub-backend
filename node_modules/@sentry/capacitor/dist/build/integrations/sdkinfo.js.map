{"version":3,"file":"sdkinfo.js","sourceRoot":"","sources":["../../../src/integrations/sdkinfo.ts"],"names":[],"mappings":";;AACA,uCAAsC;AAEtC,wCAAmD;AACnD,wCAAoC;AAEpC,MAAM,gBAAgB,GAAG,SAAS,CAAC;AAEnC,IAAI,gBAAgB,GAAmB,IAAI,CAAC;AAErC,MAAM,kBAAkB,GAAG,GAAgB,EAAE;IAClD,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,YAAY,EAAE,YAAY;KAC3B,CAAC;AACJ,CAAC,CAAC;AALW,QAAA,kBAAkB,sBAK7B;AAEF,KAAK,UAAU,YAAY,CAAC,KAAY;IACtC,2GAA2G;IAC3G,+FAA+F;IAC/F,IAAI,gBAAM,CAAC,QAAQ,KAAK,KAAK,IAAI,gBAAgB,KAAK,IAAI,EAAE;QAC1D,IAAI;YACF,gBAAgB,GAAG,MAAM,gBAAM,CAAC,kBAAkB,EAAE,CAAC;SACtD;QAAC,OAAO,CAAC,EAAE;YACV,qGAAqG;YACrG,aAAM,CAAC,IAAI,CACT,sGAAsG,CACvG,CAAC;SACH;KACF;IAED,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,YAAY,CAAC;IAChD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC;IAC5B,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,kBAAQ,CAAC;IAC5C,KAAK,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,qBAAW,CAAC;IACrD,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG;QACnB,wEAAwE;QACxE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC;QAC7B,GAAG,CAAC,CAAC,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC;QACnD;YACE,IAAI,EAAE,uBAAuB;YAC7B,OAAO,EAAE,qBAAW;SACrB;KACF,CAAC;IAEF,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import type { Event, Integration, Package } from '@sentry/core';\nimport { logger } from '@sentry/core';\n\nimport { SDK_NAME, SDK_VERSION } from '../version';\nimport { NATIVE } from '../wrapper';\n\nconst INTEGRATION_NAME = 'SdkInfo';\n\nlet NativeSdkPackage: Package | null = null;\n\nexport const sdkInfoIntegration = (): Integration => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent: processEvent,\n  };\n};\n\nasync function processEvent(event: Event): Promise<Event> {\n  // The native SDK info package here is only used on iOS as `beforeSend` is not called on `captureEnvelope`.\n  // this._nativeSdkInfo should be defined a following time so this call won't always be awaited.\n  if (NATIVE.platform === 'ios' && NativeSdkPackage === null) {\n    try {\n      NativeSdkPackage = await NATIVE.fetchNativeSdkInfo();\n    } catch (_) {\n      // If this fails, go ahead as usual as we would rather have the event be sent with a package missing.\n      logger.warn(\n        '[SdkInfo] Native SDK Info retrieval failed...something could be wrong with your Sentry installation.',\n      );\n    }\n  }\n\n  event.platform = event.platform || 'javascript';\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || SDK_NAME;\n  event.sdk.version = event.sdk.version || SDK_VERSION;\n  event.sdk.packages = [\n    // default packages are added by baseclient and should not be added here\n    ...(event.sdk.packages || []),\n    ...((NativeSdkPackage && [NativeSdkPackage]) || []),\n    {\n      name: 'npm:@sentry/capacitor',\n      version: SDK_VERSION,\n    },\n  ];\n\n  return event;\n}\n"]}
{"version":3,"file":"release.js","sourceRoot":"","sources":["../../../src/integrations/release.ts"],"names":[],"mappings":";;AASA,wCAAoC;AAEpC,MAAM,gBAAgB,GAAG,SAAS,CAAC;AAE5B,MAAM,wBAAwB,GAAG,GAAgB,EAAE;IACxD,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,YAAY,EAAE,YAAY;KAC3B,CAAC;AACJ,CAAC,CAAC;AALW,QAAA,wBAAwB,4BAKnC;AAEF,KAAK,UAAU,YAAY,CACzB,KAAY,EACZ,CAAY,EACZ,MAAmD;IAEnD,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;IACpC;;;MAGE;IACF,IAAI,OAAO,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,CAAA,KAAK,QAAQ,EAAE;QACxC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;KACjC;IAED,IAAI,OAAO,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAA,KAAK,QAAQ,EAAE;QACrC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;KAC3B;IAED,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,EAAE;QAC/B,OAAO,KAAK,CAAC;KACd;IAED,IAAI;QACF,MAAM,aAAa,GAAG,MAAM,gBAAM,CAAC,kBAAkB,EAAE,CAAC;QACxD,IAAI,aAAa,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;gBAClB,KAAK,CAAC,OAAO,GAAG,GAAG,aAAa,CAAC,EAAE,IAAI,aAAa,CAAC,OAAO,IAAI,aAAa,CAAC,KAAK,EAAE,CAAC;aACvF;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gBACf,KAAK,CAAC,IAAI,GAAG,GAAG,aAAa,CAAC,KAAK,EAAE,CAAC;aACvC;SACF;KACF;IAAC,OAAO,GAAG,EAAE;QACZ,yCAAyC;KAC1C;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import type {\n  BaseTransportOptions,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Integration,\n} from '@sentry/core';\n\nimport { NATIVE } from '../wrapper';\n\nconst INTEGRATION_NAME = 'Release';\n\nexport const nativeReleaseIntegration = (): Integration => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent: processEvent,\n  };\n};\n\nasync function processEvent(\n  event: Event,\n  _: EventHint,\n  client: Client<ClientOptions<BaseTransportOptions>>,\n): Promise<Event> {\n  const options = client.getOptions();\n  /*\n    Check for the release and dist in the options passed on init.\n    Otherwise, we get the release and dist from the native package.\n  */\n  if (typeof options?.release === 'string') {\n    event.release = options.release;\n  }\n\n  if (typeof options?.dist === 'string') {\n    event.dist = options.dist;\n  }\n\n  if (event.release && event.dist) {\n    return event;\n  }\n\n  try {\n    const nativeRelease = await NATIVE.fetchNativeRelease();\n    if (nativeRelease) {\n      if (!event.release) {\n        event.release = `${nativeRelease.id}@${nativeRelease.version}+${nativeRelease.build}`;\n      }\n      if (!event.dist) {\n        event.dist = `${nativeRelease.build}`;\n      }\n    }\n  } catch (_Oo) {\n    // Something went wrong, we just continue\n  }\n\n  return event;\n}\n"]}
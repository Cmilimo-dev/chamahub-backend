{"version":3,"file":"scopeSync.js","sourceRoot":"","sources":["../../src/scopeSync.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Breadcrumb, Scope } from '@sentry/core';\n\nimport { DEFAULT_BREADCRUMB_LEVEL } from './breadcrumb';\nimport { fillTyped } from './utils/fill';\nimport { convertToNormalizedObject } from './utils/normalize';\nimport { NATIVE } from './wrapper';\n\n/**\n * This WeakMap is used to keep track of which scopes have been synced to the native SDKs.\n * This ensures that we don't double sync the same scope.\n */\nconst syncedToNativeMap = new WeakMap<Scope, true>();\n\n/**\n * Hooks into the scope set methods and sync new data added to the given scope with the native SDKs.\n */\nexport function enableSyncToNative(scope: Scope): void {\n  if (syncedToNativeMap.has(scope)) {\n    return;\n  }\n  syncedToNativeMap.set(scope, true);\n\n  fillTyped(scope, 'setUser', original => (user): Scope => {\n    NATIVE.setUser(user);\n    return original.call(scope, user);\n  });\n\n  fillTyped(scope, 'setTag', original => (key, value): Scope => {\n    NATIVE.setTag(key, value as string);\n    return original.call(scope, key, value);\n  });\n\n  fillTyped(scope, 'setTags', original => (tags): Scope => {\n    // As native only has setTag, we just loop through each tag key.\n    Object.keys(tags).forEach(key => {\n      NATIVE.setTag(key, tags[key] as string);\n    });\n    return original.call(scope, tags);\n  });\n\n  fillTyped(scope, 'setExtras', original => (extras): Scope => {\n    Object.keys(extras).forEach(key => {\n      NATIVE.setExtra(key, extras[key]);\n    });\n    return original.call(scope, extras);\n  });\n\n  fillTyped(scope, 'setExtra', original => (key, value): Scope => {\n    NATIVE.setExtra(key, value);\n    return original.call(scope, key, value);\n  });\n\n  fillTyped(scope, 'addBreadcrumb', original => (breadcrumb, maxBreadcrumbs): Scope => {\n    const mergedBreadcrumb: Breadcrumb = {\n      ...breadcrumb,\n      level: breadcrumb.level || DEFAULT_BREADCRUMB_LEVEL,\n      data: breadcrumb.data ? convertToNormalizedObject(breadcrumb.data) : undefined,\n    };\n\n    original.call(scope, mergedBreadcrumb, maxBreadcrumbs);\n\n    const finalBreadcrumb = scope.getLastBreadcrumb();\n    if (finalBreadcrumb) {\n      NATIVE.addBreadcrumb(finalBreadcrumb);\n    }\n\n    return scope;\n  });\n\n  fillTyped(scope, 'clearBreadcrumbs', original => (): Scope => {\n    NATIVE.clearBreadcrumbs();\n    return original.call(scope);\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  fillTyped(scope, 'setContext', original => (key: string, context: { [key: string]: any } | null): Scope => {\n    NATIVE.setContext(key, context);\n    return original.call(scope, key, context);\n  });\n}\n"]}
{"version":3,"file":"normalize.js","sourceRoot":"","sources":["../../../src/utils/normalize.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAG,SAAS,EAAE,MAAM,cAAc,CAAC;AAErD,MAAM,GAAG,GAAG,OAAO,CAAC;AAEpB;;GAEG;AACH,8DAA8D;AAC9D,MAAM,UAAU,yBAAyB,CAAC,IAAa;;IACrD,MAAM,OAAO,GAAG,MAAA,SAAS,EAAE,0CAAE,UAAU,EAAE,CAAC;IAC1C,MAAM,UAAU,GAAY,SAAS,CAAC,IAAI,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,cAAc,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,mBAAmB,CAAC,CAAC;IACnG,IAAI,UAAU,KAAK,IAAI,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QACzD,OAAO;YACL,CAAC,GAAG,CAAC,EAAE,UAAU;SAClB,CAAC;KACH;SAAM;QACL,8DAA8D;QAC9D,OAAO,UAAiC,CAAC;KAC1C;AACH,CAAC","sourcesContent":["import { getClient , normalize } from '@sentry/core';\n\nconst KEY = 'value';\n\n/**\n * Converts any input into a valid record with string keys.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function convertToNormalizedObject(data: unknown): Record<string, any> {\n  const options = getClient()?.getOptions();\n  const normalized: unknown = normalize(data, options?.normalizeDepth, options?.normalizeMaxBreadth);\n  if (normalized === null || typeof normalized !== 'object') {\n    return {\n      [KEY]: normalized,\n    };\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return normalized as Record<string, any>;\n  }\n}\n"]}
{"version":3,"file":"devicecontext.js","sourceRoot":"","sources":["../../../src/integrations/devicecontext.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAEtC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAEpC,MAAM,gBAAgB,GAAG,eAAe,CAAC;AAEzC,MAAM,CAAC,MAAM,wBAAwB,GAAG,GAAgB,EAAE;IACxD,OAAO;QACL,IAAI,EAAE,gBAAgB;QACtB,YAAY,EAAE,YAAY;KAC3B,CAAC;AACJ,CAAC,CAAC;AAEF,KAAK,UAAU,YAAY,CAAC,KAAY;IACtC,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,yBAAyB,EAAE,CAAC;QAC1D,MAAM,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAa,CAAC;QAEhD,KAAK,CAAC,QAAQ,GAAG,EAAE,GAAG,OAAO,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnD,IAAI,MAAM,IAAI,QAAQ,EAAE;YACtB,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;gBACf,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC;aAC1B;SACF;KACF;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,CAAC,GAAG,CAAC,6CAA6C,CAAC,EAAE,CAAC,CAAC;KAC9D;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import type { Contexts, Event, Integration } from '@sentry/core';\nimport { logger } from '@sentry/core';\n\nimport { NATIVE } from '../wrapper';\n\nconst INTEGRATION_NAME = 'DeviceContext';\n\nexport const deviceContextIntegration = (): Integration => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent: processEvent,\n  };\n};\n\nasync function processEvent(event: Event): Promise<Event> {\n  try {\n    const contexts = await NATIVE.fetchNativeDeviceContexts();\n    const context = contexts['context'] as Contexts;\n\n    event.contexts = { ...context, ...event.contexts };\n    if ('user' in contexts) {\n      const user = contexts['user'];\n      if (!event.user) {\n        event.user = { ...user };\n      }\n    }\n  } catch (e) {\n    logger.log(`Failed to get device context from native: ${e}`);\n  }\n\n  return event;\n}\n"]}